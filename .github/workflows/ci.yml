#
# FILE: `StockTrader/.github/workflows/ci.yml`
#

name: StockTrader CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          if command -v python3 &> /dev/null; then
            python3 -m venv venv
          else
            python -m venv venv
          fi
          source venv/bin/activate

          for d in src/ scripts/ tests/ utils/; do
            [ -d "$d" ] || { echo "ERROR: $d/ missing"; exit 1; }
          done

          if command -v pip3 &> /dev/null; then
            pip3 install --upgrade pip
            pip3 install -e .
            pip3 install pytest black
          else
            pip install --upgrade pip
            pip install -e .
            pip install pytest black
          fi

      - name: Set Env Vars
        run: |
          echo "STOCK_TRADER_HOME=$GITHUB_WORKSPACE/home" >> $GITHUB_ENV
          echo "STOCK_TRADER_MARKET_DATA=$GITHUB_WORKSPACE/data" >> $GITHUB_ENV
          echo "STOCK_TRADER_DWH=$GITHUB_WORKSPACE/data/warehouse" >> $GITHUB_ENV
          echo "STOCK_TRADER_LOG=$GITHUB_WORKSPACE/logs" >> $GITHUB_ENV
          mkdir -p $GITHUB_WORKSPACE/data/warehouse $GITHUB_WORKSPACE/logs

      - name: Load and Set API Keys
        run: |
          echo "tradier_acct=${{ secrets.tradier_acct }}" >> $GITHUB_ENV
          echo "tradier_token=${{ secrets.tradier_token }}" >> $GITHUB_ENV
          echo "tradier_acct_live=${{ secrets.tradier_acct_live }}" >> $GITHUB_ENV
          echo "tradier_token_live=${{ secrets.tradier_token_live }}" >> $GITHUB_ENV
          echo "fred_api_key=${{ secrets.fred_api_key }}" >> $GITHUB_ENV

      - name: Debug Env Vars
        run: |
          echo "STOCK_TRADER_HOME: $STOCK_TRADER_HOME"
          echo "STOCK_TRADER_MARKET_DATA: $STOCK_TRADER_MARKET_DATA"
          echo "STOCK_TRADER_LOG: $STOCK_TRADER_LOG"
          echo "API KEYS:"
          echo "tradier_acct, tradier_token, tradier_acct_live, tradier_token_live"

          # echo "Home Directory:"
          # ls -lah $STOCK_TRADER_HOME
          echo "Market Data Directory:"
          ls -lah $STOCK_TRADER_MARKET_DATA
          echo "Log Directory:"
          ls -lah $STOCK_TRADER_LOG

      - name: Prep Artifact Directory
        run: |
          mkdir -p artifacts/test-reports
          mkdir -p artifacts/code-format-reports

          echo "ci_ts: $(date -Iseconds)" >> artifacts/ci_mdata.txt
          echo "git_commit: ${{ github.sha }}" >> artifacts/ci_mdata.txt
          echo "git_reference: ${{ github.ref }}" >> artifacts/ci_mdata.txt
          echo "workflow_run: ${{ github.run_number}}" >> artifacts/ci_mdata.txt

      - name: Run Unit Tests + Report
        run: |
          source venv/bin/activate
          pytest -v --junit-xml=artifacts/test-reports/test-summary.xml tests/ | \
            tee artifacts/test-reports/test-summary.txt
          echo "pytest_exit_code: ${PIPESTATUS[0]}" >> artifacts/test-reports/test-summary.txt
          echo "pytest_ts: $(date -Iseconds)" >> artifacts/test-reports/test-summary.txt

      - name: Run Code Formatting Checks + Report
        run: |
          source venv/bin/activate

          echo "Run black code format checks" > artifacts/code-format-reports/black-format.txt
          black --check --diff src/ scripts/ tests/ utils/ 2>&1 | \
            tee artifacts/code-format-reports/black-detailed.txt

          BLACK_EXIT_CODE=${PIPESTATUS[0]}
          echo "black_exit_code: $BLACK_EXIT_CODE" >> artifacts/code-format-reports/summary.txt
          echo "format_check_ts: $(date -Iseconds)" >> artifacts/code-format-reports/summary.txt

          exit $BLACK_EXIT_CODE

      - name: Upload Report Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-reports-${{ github.run_number }}
          path: artifacts/
          retention-days: 5
